---
title: "data_manipulation"
author: "Casandra Laney"
date: "2025-09-18"
output: github_document
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
```

Let's import the datasets.

```{r}
litters_df = 
  read_csv("data/FAS_litters.csv", na = c("NA", ".", ""))

litters_df =
  janitor::clean_names(litters_df)

pups_df = 
  read_csv("data/FAS_pups.csv", na = c("NA", ".", ""), skip = 3)

pups_df =
  janitor::clean_names(pups_df)
```

## 'select'

'select' selects variables from my dataframe

select specific variables

```{r}
select(litters_df, group, litter_number, gd0_weight)
```

select a range

```{r}
select(litters_df, group:gd_of_birth)
```

select by removal

```{r}
select(litters_df, group, -group)
select(litters_df, -(group:gd_of_birth))
```

select by prefix

```{r}
select(litters_df, group, starts_with("gd"))
```

rearrange by selecting

```{r echo=TRUE}
select(litters_df, starts_with("gd"), group)
select(litters_df, litter_number, everything())
```

rename by selecting

```{r}
select(litters_df, GROUP = group, everything())
rename(litters_df, GROUP = group)
```

what if i only select one variable...?

```{r}
select(litters_df, group)
pull(litters_df, group)
```

LA code

```{r}
select(pups_df, litter_number, sex, pd_ears)
```

## 'filter'

use 'filter()' to filter out rows

```{r}
filter(litters_df, gd_of_birth == 20, pups_born_alive == 6)
```

look for more than five pups alive

```{r}
filter(litters_df, pups_born_alive > 5)
filter(litters_df, pups_born_alive >= 5)
filter(litters_df, pups_born_alive <= 5)
```

look for non-matches

```{r}
filter(litters_df, pups_born_alive != 6)
```

match to a set

```{r}
filter(litters_df, group %in% c("Con7", "Con8"))
```

filter out missing rows with 'drop(na)'

```{r}
drop_na(litters_df)
drop_na(litters_df, gd0_weight)
```

LA code

```{r}
filter(pups_df, sex == 1)
filter(pups_df, pd_walk < 11, sex == 2)
```

## 'mutate'

use 'mutate()' to create or modify variables

```{r}
mutate(
  litters_df,
  wt_gain = gd18_weight - gd0_weight,
  group = str_to_lower(group)
)
```

## 'arrange'

'arrange()' arranges things

```{r}
arrange(litters_df, pups_born_alive)
arrange(litters_df, group, pups_born_alive)

arrange(litters_df, gd0_weight)
```

## PIPES

use pipes to avoid clunkiness

```{r}
litters_df = 
  read_csv("data/FAS_litters.csv", na = c("NA", ".", "")) |>
  janitor::clean_names() |>
  select(group, litter_number, starts_with("gd")) |>
  drop_na() |>
  mutate(
    wt_gain = gd18_weight - gd0_weight
    )
```

LA code
```{r}
pups_df =
  read_csv("data/FAS_pups.csv", na = c("NA", ".", ""), skip = 3) |>
  janitor::clean_names() |>
  filter(sex == 1) |> 
  select(-pd_ears) |> 
  mutate(pd_pivot_ge7 = pd_pivot > 7)
```

